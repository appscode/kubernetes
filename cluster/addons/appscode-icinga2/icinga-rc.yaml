apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    k8s-app: appscode-alert
    version: v1
    kubernetes.io/cluster-service: "true"
  name: appscode-alert
  namespace: kube-system
spec:
  replicas: 1
  selector:
    k8s-app: appscode-alert
    version: v1
  template:
    metadata:
      labels:
        k8s-app: appscode-alert
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - image: appscode/icinga:2.4.8-k8s
        imagePullPolicy: Always
        name: alert-icinga
        ports:
        - containerPort: 5665
          name: api
          protocol: TCP
        - containerPort: 80
          name: tcp
          protocol: TCP
        volumeMounts:
          - name: data-volume
            mountPath: /var/db
          - name: appscode-api-token
            mountPath: /var/run/secrets/appscode
          - name: appscode-cluster-metadata
            mountPath: /var/run/config/appscode
          - name: appscode-influx
            mountPath: /srv/influxdb/secrets
          - name: appscode-icinga
            mountPath: /srv/icinga2/secrets
      - image: appscode/postgres:9.5-db
        imagePullPolicy: Always
        name: alert-ido
        args:
          - basic
          - /var/db/schema/setup-db.sh
        ports:
          - containerPort: 5432
            name: ido
            protocol: TCP
        volumeMounts:
          - name: data-volume
            mountPath: /var/db
      volumes:
        - name: data-volume
          emptyDir: {}
        - name: appscode-api-token
          secret:
            secretName: appscode-api-token
        - name: appscode-cluster-metadata
          configMap:
            name: cluster-metadata
        - name: appscode-influx
          secret:
            secretName: appscode-influx
        - name: appscode-icinga
          secret:
            secretName: appscode-icinga
